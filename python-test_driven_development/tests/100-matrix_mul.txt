>>> __import__('100-matrix_mul').matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> __import__('100-matrix_mul').matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> __import__('100-matrix_mul').matrix_mul([], [[1]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> __import__('100-matrix_mul').matrix_mul([[1]], [[]])
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> __import__('100-matrix_mul').matrix_mul([[1, 2]], [[1, 2]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> __import__('100-matrix_mul').matrix_mul([[1, '2']], [[1], [2]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> __import__('100-matrix_mul').matrix_mul("not a list", [[1]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> __import__('100-matrix_mul').matrix_mul([[1]], "not a list")
Traceback (most recent call last):
TypeError: m_b must be a list

>>> __import__('100-matrix_mul').matrix_mul([1, 2, 3], [[1], [2], [3]])
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> __import__('100-matrix_mul').matrix_mul([[1], [2], [3]], [1, 2, 3])
Traceback (most recent call last):
TypeError: m_b must be a list of lists

>>> __import__('100-matrix_mul').matrix_mul([[1, 2]], [["a", "b"]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> __import__('100-matrix_mul').matrix_mul([[1, 2], [3]], [[1], [2]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> __import__('100-matrix_mul').matrix_mul([[1, 2]], [[1], [2, 3]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> __import__('100-matrix_mul').matrix_mul([[1, 2]])
Traceback (most recent call last):
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

>>> __import__('100-matrix_mul').matrix_mul()
Traceback (most recent call last):
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

